addLayer("b", {
    name: "The Big Bang",
    symbol: "ðŸ’¥", // A symbol representing the Big Bang
    position: 0,
    startData() { return { 
        unlocked: true, 
        points: new Decimal(0), 
        quarks: new Decimal(0), // New resource: Quarks
    }},
    color: "#FF4500",
    requires: new Decimal(10), // Amount of Energy required to progress to the next layer
    resource: "Energy", // The resource generated by this layer
    baseResource: "Matter", // Resource used to unlock this layer (starts as "Matter")
    baseAmount() { return player.points }, // Base resource amount (points for now)
    type: "normal",
    exponent: 0.5, // Slower growth in the beginning
    gainMult() { return new Decimal(1) },
    gainExp() { return new Decimal(1) },
    layerShown() { return true },

    upgrades: {
        11: {
            title: "Quantum Fluctuations",
            description: "Boost Energy production.",
            cost: new Decimal(5),
            effect() { return new Decimal(2) },
        },
        12: {
            title: "Inflation",
            description: "Greatly increase Energy gain.",
            cost: new Decimal(20),
            effect() { return new Decimal(5) },
            unlocked() { return hasUpgrade("b", 11) },
        },
        13: {
            title: "Particle Generation",
            description: "Unlocks the ability to generate Quarks.",
            cost: new Decimal(50),
            unlocked() { return hasUpgrade("b", 12) },
        },
        14: {
            title: "Quark Fusion",
            description: "Quarks boost Energy production.",
            cost: new Decimal(100),
            effect() { 
                return player.b.quarks.add(1).pow(0.5); // Quark effect on Energy gain
            },
            unlocked() { return hasUpgrade("b", 13) },
        },
    },

    // New buyable: Quark Generator
    buyables: {
        11: {
            title: "Quark Generator",
            cost(x) { return new Decimal(10).mul(x.add(1).pow(1.5)); },
            effect(x) { 
                return x.add(1).pow(0.5); // Increase in Quark generation per level
            },
            display() {
                return `Generate more Quarks. Currently: ${format(player.b.buyables[11])} Quark Generators.\n
                        Each generator produces ${format(this.effect())} Quarks per second.\n
                        Cost for next: ${format(this.cost(player.b.buyables[11]))} Energy.`;
            },
            canAfford() { return player.b.points.gte(this.cost()) },
            buy() {
                player.b.points = player.b.points.sub(this.cost());
                player.b.buyables[11] = player.b.buyables[11].add(1);
            },
            effectDisplay() { return format(this.effect()) + "x"; },
            style: { 'background-color': '#FF6347', 'color': '#FFFFFF' }, // Quark color (tomato red)
        },
    },

    // Update function to generate Quarks
    update(diff) {
        if (hasUpgrade("b", 13)) {
            let quarkGain = player.b.buyables[11].mul(diff); // Gain Quarks based on Quark Generators
            player.b.quarks = player.b.quarks.add(quarkGain);
        }
    },

    milestones: {
        0: {
            requirementDescription: "Create 100 Energy",
            effectDescription: "Unlock Stellar Formation.",
            done() { return player.b.points.gte(100) },
            onComplete() { player.s.unlocked = true; }, // Unlocks the next layer
        },
        1: {
            requirementDescription: "Create 1,000 Energy",
            effectDescription: "Unlock an auto-clicker for Energy production.",
            done() { return player.b.points.gte(1000) },
            onComplete() { player.b.autoClicker = true; }, // Unlocks the auto-clicker
        },
    },

    // Auto-clicker for Energy production
    autoClick(diff) {
        if (player.b.autoClicker) {
            player.points = player.points.add(player.b.points.mul(diff)); // Auto-generate Energy
        }
    },
});
